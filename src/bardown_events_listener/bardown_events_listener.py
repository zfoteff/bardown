__author__ = "Zac Foteff"
__version__ = "0.0.1"

import argparse
from contextlib import asynccontextmanager
from logging import Logger

from fastapi import FastAPI
from fastapi.responses import JSONResponse

logger = Logger("bardown-events-listener.txt")


async def get_health() -> JSONResponse:
    """Healthcheck for the Player Interface service. Asserts the service is running and has
    connection to the Player Data Service

    Returns:
        JSONResponse: Healthcheck response
    """
    return JSONResponse(status_code=200, content={"status": 200, "response": "Running"})


@asynccontextmanager
async def lifespan(api: FastAPI):
    # Startup events
    yield
    # Shutdown events


app = FastAPI(
    title="Bardown Events Listener",
    description="Pub/Sub API for events generated by the Bardown Application",
    lifespan=lifespan,
    version=__version__,
    license_info={"name": "MIT", "url": "https://opensource.org/license/mit"},
)


if __name__ == "__main__":
    from uvicorn import run

    parser = argparse.ArgumentParser(
        description="""
        PubSub API for events in the Bardown application. Run with no arguments
        to start this service
    """
    )
    parser.add_argument(
        "-v",
        "--version",
        help="Display the version of the service",
        action="store_true",
    )
    args = parser.parse_args()

    if args.version is True:
        print(app.version)
    else:
        run(
            app="bardown_event_listener:app",
            log_level="debug",
            host="0.0.0.0",
            port=3002,
            reload=True,
        )
